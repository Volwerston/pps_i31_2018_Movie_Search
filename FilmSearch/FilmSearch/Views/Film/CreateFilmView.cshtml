@model Film
@{
    Layout = "_Layout";
    ViewData["Title"] = "Add Film";
}

<h2 class="text-center">Add film</h2>
<hr />
<link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.1/css/select2.min.css" rel="stylesheet" />

<div class="row">
    <div class="col-md-6 col-md-push-3">
        <form>
            <div id="allValidation" class="text-danger"></div>
            <div class="form-group">
                <label class="control-label">Title</label>
                <input class="form-control" id="title"/>
                <span id="titleValidation" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="control-label">Release Date</label>
                <input type="date" class="form-control" data-provider="datepicker" id="releaseDate"/>
                <span id="releaseDateValidation" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="control-label">Photo</label>
                <input type="file" class="form-control" id="photoFile"/>
            </div>
            <div class="form-group">
                <label class="control-label">Short Description</label>
                <textarea class="form-control" id="description"></textarea>
                <span id="descriptionValidation" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="control-label">Director</label>
                <select class="personsSelect form-control" id="directorSelect">
                </select>
            </div>
            <div class="form-group">
                <label class="control-label">Actors</label>
                <select multiple class="personsSelect form-control" id="actorsSelect">
                </select>
            </div>
            <div class="form-group">
                <label class="control-label">Genres</label>
                <select multiple class="form-control" id="genresSelect">
                </select>
            </div>
            <div class="form-group">
                <input type="button" class="btn btn-default btn-block btn-info" value="Submit" onclick="onSubmit(this)"/>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.1/js/select2.min.js"></script>
    <script src="~/js/utils.js"></script>
    <script src="~/js/dynamicSelect.js"></script>
    <script>
        $('#genresSelect').select2({
            ajax: defaultSelectAjax("/api/film/genres", item => ({ id: item.id, text: item.name }))
        });
        $('.personsSelect').select2({
            ajax: defaultSelectAjax("/api/person", item => ({ id: item.id, text: item.fullName }))
        });

        function getIds(selectElement) {
            return [].slice.call(selectElement.selectedOptions)
                .map(opt => ({ id: opt.value }));
        }


        function saveMovie(photoId) {
            var title = document.getElementById("title").value;
            var stop = requireNonNull(title, () => {
                    document.getElementById("titleValidation").innerHTML = "Title is not set";
                });
            if (stop) return;

            var releaseDate = convertToDefaultDateFormat(document.getElementById("releaseDate").value);
            var stop = requireNonNull(releaseDate, () => {
                    document.getElementById("releaseDateValidation").innerHTML = "Release date is not set";
                });
            if (stop) return;

            var description = document.getElementById("description").value;
            var stop = requireNonNull(description, () => {
                    document.getElementById("descriptionValidation").innerHTML = "Description is not set";
                });

            if (stop) return;

            var director = getIds(document.getElementById("directorSelect"))[0];
            var actors = getIds(document.getElementById("actorsSelect"));
            var genres = getIds(document.getElementById("genresSelect"));

            var requestData = {
                title: title,
                releaseDate: releaseDate,
                shortDescription: description,
                director: director,
                actors: actors,
                genres: genres,
                photo: {
                    id: photoId
                }
            };

            $.ajax({
                    type: 'POST',
                    url: "/api/film",
                    contentType: "application/json",
                    data: JSON.stringify(requestData),
                    success: data => {
                        window.location.href = "/film/showfilmviews";
                    },
                    error: resp => {
                        document.getElementById("allValidation").innerHTML = "Failed to save film";
                    }
                }
            );
        }

        function onSubmit(btn) {
            var blob = ($('#photoFile'))[0].files[0];

            if (blob != null) {
                var formData = new FormData();
                formData.append("file", blob);

                $.ajax({
                    url: "/api/file",
                    type: "POST",
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function(response) {
                        saveMovie(response.id);
                    },
                    error: function(jqXHR, textStatus, errorMessage) {
                        document.getElementById("allValidation").innerHTML = "Failed to upload file";
                        console.log(errorMessage);
                    }
                });
            } else {
                saveMovie();
            }
        }
    </script>
}
